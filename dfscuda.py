# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ztc17xxahJqjJf2ew0x0P06ztI_DdKyW
"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile dfs.cu
# #include <iostream>
# #include <vector>
# using namespace std;
# const int MAXN = 1e5;
# vector<int> adj[MAXN+5]; // adjacency list
# bool visited[MAXN+5]; // mark visited nodes
# void dfs(int node) {
# visited[node] = true;
# cout << node << " "; // Print the visited node here
# for (int i = 0; i < adj[node].size(); i++) {
# int next_node = adj[node][i];
# if (!visited[next_node]) {
# dfs(next_node);
# }
# }
# }
# int main() {
# cout << "Please enter nodes and edges: ";
# int n, m; // number of nodes and edges
# cin >> n >> m;
# for (int i = 1; i <= m; i++) {
# int u, v; // edge between u and v
# cin >> u >> v;
# adj[u].push_back(v);
# adj[v].push_back(u);
# }
# int start_node; // start node of DFS
# cout << "Enter the start node for DFS: ";
# cin >> start_node;
# dfs(start_node);
# cout << endl; // Print a newline after DFS traversal
# return 0;
# }
#

!nvcc dfs.cu -o dfs

!./dfs

